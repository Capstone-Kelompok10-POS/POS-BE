// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PasswordHandler is an autogenerated mock type for the PasswordHandler type
type PasswordHandler struct {
	mock.Mock
}

// ComparePassword provides a mock function with given fields: hash, _a1
func (_m *PasswordHandler) ComparePassword(hash string, _a1 string) error {
	ret := _m.Called(hash, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(hash, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HashPassword provides a mock function with given fields: _a0
func (_m *PasswordHandler) HashPassword(_a0 string) string {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewPasswordHandler creates a new instance of PasswordHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPasswordHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *PasswordHandler {
	mock := &PasswordHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
